name: Taichi Pull Request

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build-ubuntu:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: Setup Python
      uses: actions/setup-python@v2.3.3
      with:
        python-version: '3.10'

    - name: Please ensure you created a pull request in `taichi-dev/taichi`.
      env:
        PR_NUMBER: ${{ github.event.number }}
      run: |
        echo $PR_NUMBER > ./pr_number
        echo PR_NUMBER=$PR_NUMBER

    - name: Check Taichi pull request mergeability
      id: check-taichi-pr-mergeable
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          let fs = require('fs');
          let pull_number = Number(fs.readFileSync('./pr_number'));
          let pull = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pull_number,
          });
          console.log("pull =", pull);
          let taichi_pull_number_match = String(pull.body).match("https://github.com/taichi-dev/taichi/pull/(\\d+)");
          if (taichi_pull_number_match == null || taichi_pull_number_match.length < 2) {
            console.log("-- Did you paste the URL to a Taichi PR in your description?");
            console.log("-- Checkout https://github.com/taichi-dev/taichi-aot-demo/pull/97 as an example.");
            console.log("-> This PR is not approved.");
            return -1;
          }
          let taichi_pull_number = taichi_pull_number_match[1];

          console.log("taichi_issue_number =", taichi_issue_number);
          let taichi_pull = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: 'taichi',
            pull_number: taichi_pull_number,
          });
          console.log("taichi_pull =", taichi_pull);
          if (taichi_pr.mergeable) {
            console.log("-- The referenced Taichi PR is not mergeable.");
            console.log("-- Please ensure the Taichi PR passes all checks and is approved by a reviewer.");
            console.log("-> This PR is not approved.");
            return -1;
          } else {
            console.log("-> This PR is approved. Thank you for your contribution!");
            return 0;
          }

    - name: Approve
      run: exit ${{steps.check-taichi-pr-mergeable.outputs.result}}